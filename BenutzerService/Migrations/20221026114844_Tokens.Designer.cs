// <auto-generated />
using System;
using BenutzerService.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BenutzerService.Migrations
{
    [DbContext(typeof(DatenbankContext))]
    [Migration("20221026114844_Tokens")]
    partial class Tokens
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("Model.Nutzer", b =>
                {
                    b.Property<int>("nutzerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("NUTZER_ID");

                    b.Property<string>("name")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT")
                        .HasColumnName("NAME");

                    b.Property<string>("pwd")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PWD");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("UID");

                    b.Property<string>("vorname")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT")
                        .HasColumnName("VORNAME");

                    b.HasKey("nutzerId");

                    b.ToTable("NUTZER");
                });

            modelBuilder.Entity("Model.Rolle", b =>
                {
                    b.Property<int>("rolleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ROLLE_ID");

                    b.Property<string>("rolleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("ROLLE_NAME");

                    b.HasKey("rolleId");

                    b.ToTable("ROLLEN");
                });

            modelBuilder.Entity("Model.Token", b =>
                {
                    b.Property<string>("token")
                        .HasColumnType("TEXT")
                        .HasColumnName("TOKEN");

                    b.Property<DateTime>("erstellt")
                        .HasColumnType("TEXT")
                        .HasColumnName("ERSTELLT");

                    b.Property<int>("nutzerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("used")
                        .HasColumnType("TEXT")
                        .HasColumnName("USED");

                    b.HasKey("token");

                    b.HasIndex("nutzerId");

                    b.ToTable("TOKENS");
                });

            modelBuilder.Entity("NutzerRolle", b =>
                {
                    b.Property<int>("nutzerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rollenrolleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("nutzerId", "rollenrolleId");

                    b.HasIndex("rollenrolleId");

                    b.ToTable("NutzerRolle");
                });

            modelBuilder.Entity("Model.Token", b =>
                {
                    b.HasOne("Model.Nutzer", "nutzer")
                        .WithMany("tokens")
                        .HasForeignKey("nutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nutzer");
                });

            modelBuilder.Entity("NutzerRolle", b =>
                {
                    b.HasOne("Model.Nutzer", null)
                        .WithMany()
                        .HasForeignKey("nutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Rolle", null)
                        .WithMany()
                        .HasForeignKey("rollenrolleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Nutzer", b =>
                {
                    b.Navigation("tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
